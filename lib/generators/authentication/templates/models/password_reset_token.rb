# frozen_string_literal: true

# 
# Model for managing password reset tokens
#
# Automatically generated by the orthodox gem (https://github.com/bodacious/orthodox)

#
# == Schema Information
#
# Table name: password_reset_tokens
#
#  id             :bigint           not null, primary key
#  expires_at     :datetime
#  resetable_type :string           not null
#  secret         :string
#  created_at     :datetime         not null
#  updated_at     :datetime         not null
#  resetable_id   :bigint           not null
#
# Indexes
#
#  index_password_reset_tokens_on_expires_at                       (expires_at)
#  index_password_reset_tokens_on_resetable_type_and_resetable_id  (resetable_type,resetable_id)
#  index_password_reset_tokens_on_secret                           (secret) UNIQUE
#

class PasswordResetToken < ApplicationRecord
  
  # =============
  # = Constants =
  # =============
  
  ##
  # How long should password reset links be valid for?
  EXPIRES_AFTER = 15.minutes
  
  # ================
  # = Associations =
  # ================
  
  belongs_to :resetable, polymorphic: true
  
  # ==============
  # = Attributes =
  # ==============
  
  has_secure_token :secret
  
  attr_readonly :resetable_type, :resetable_id, :expires_at, :secret
  
  before_create :set_expires_at
  
  def expired?
    expires_at <= Time.current
  end
  
  private
  
  def set_expires_at
    self.expires_at = EXPIRES_AFTER.from_now
  end
  
end
